   # pyproject.toml

   [tool.poetry]
   name = "rag_with_kubernetes"
   version = "0.1.0"
   description = "A RAG (Retrieval Augmented Generation) application scalable with Kubernetes."
   authors = ["Your Name <you@example.com>"] # Replace with your details
   readme = "README.md"
   packages = [{include = "app", from = "."}]

   [tool.poetry.dependencies]
   python = "^3.10"
   fastapi = "^0.111.0"
   uvicorn = {extras = ["standard"], version = "^0.29.0"}
   pydantic = "^2.7.1"
   pydantic-settings = "^2.2.1"
   python-dotenv = "^1.0.1"
   httpx = "^0.27.0"           # For making async HTTP requests (e.g., to Ollama, LLM APIs)
   openai = {version = "^1.25.2", optional = true} # Make OpenAI optional
   sentence-transformers = "^2.7.0"
   numpy = "^2.2.6"
   faiss-cpu = "^1.8.0"
   # langchain = {version = "^0.1.0", optional = true}
   # llama-index = {version = "^0.10.0", optional = true}
   # psycopg2-binary = {version = "^2.9.9", optional = true}
   # sqlalchemy = {version = "^2.0.29", optional = true}

   [tool.poetry.extras]
   openai = ["openai"]
   # langchain = ["langchain"]
   # llama-index = ["llama-index"]
   # postgres = ["psycopg2-binary", "sqlalchemy"]


   [tool.poetry.group.dev.dependencies]
   pytest = "^8.2.0"
   pytest-asyncio = "^0.23.6"
   # httpx is already a main dependency now
   ruff = "^0.4.4"
   mypy = "^1.10.0"
   pre-commit = "^3.7.0"

   [tool.ruff]
   line-length = 88
   indent-width = 4

   [tool.ruff.lint]
   select = ["E","W","F","I","C","B"]
   ignore = []

   [tool.ruff.format]
   quote-style = "double"
   indent-style = "space"
   skip-magic-trailing-comma = false
   line-ending = "auto"

   [tool.mypy]
   python_version = "3.10"
   warn_return_any = true
   warn_unused_configs = true
   ignore_missing_imports = true
   exclude = ["venv", "rag_with_kube"]

   [build-system]
   requires = ["poetry-core>=1.0.0"]
   build-backend = "poetry.core.masonry.api"
   